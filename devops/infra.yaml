AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'


Parameters:
  stage:
    Type: String
    Default: "stg"
  ResourcePrefix:
    Type: String
    Default: "16s"
  ResourcePrefix:
    Type: String
    Default: "amili"
  Image:
    Type: String
    Default: ""
  Region:
    Type: String
    Default: ""
  VPCID:
    Type: String  
    Default: ""
  SubnetID1:
    Type: String
    Default: ""
  SubnetID2:
    Type: String
    Default: ""
  SubnetID3:
    Type: String
    Default: ""
  


Resources:

  CountySecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupName: !Sub ${ResourcePrefix}-${stage}-SG
      GroupDescription: "Security group with self-referencing inbound rule"
      VpcId: !Ref VPCID 
      # SecurityGroupEgress:
      #   - IpProtocol: "-1" 
      #     CidrIp: "0.0.0.0/0"

  MLSecurityGroupIngressHTTP:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !GetAtt CountySecurityGroup.GroupId
      IpProtocol: "-1"
      SourceSecurityGroupId: !GetAtt CountySecurityGroup.GroupId

  CountyLogGroup:
    Type: "AWS::Logs::LogGroup"
    Properties:
      LogGroupName: !Sub ${ResourcePrefix}-${stage}-logs
      RetentionInDays: 30

  IAMRoleECRBatchProd:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Sub "${ResourcePrefix}-${stage}-${Region}-Job-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "ecs-tasks.amazonaws.com"
                - "ec2.amazonaws.com"
            Action: "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryFullAccess"
        - "arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role"  
        - "arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceRole"
        - "arn:aws:iam::aws:policy/AmazonEC2FullAccess"
        - "arn:aws:iam::aws:policy/AmazonECS_FullAccess"
        - "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"
        - "arn:aws:iam::aws:policy/AmazonS3FullAccess"
        - "arn:aws:iam::aws:policy/AWSBatchFullAccess"
        - "arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy"
        - "arn:aws:iam::aws:policy/CloudWatchFullAccess"

  InstanceProfileECRBatchProd:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      InstanceProfileName: !Sub "${ResourcePrefix}-${stage}-${Region}-Job-instance-profile"
      Roles:
        - !Ref IAMRoleECRBatchProd



  #################################### research ########################################
  ResearchJobDefinition:
    Type: AWS::Batch::JobDefinition
    Properties:
      Type: container
      JobDefinitionName: !Sub ${ResourcePrefix}-${stage}-research
      ContainerProperties:
        Command:
          - bash
          - "/data/get_git_repo.sh"
        Privileged: true
        JobRoleArn: !GetAtt IAMRoleECRBatchProd.Arn
        ExecutionRoleArn: !GetAtt IAMRoleECRBatchProd.Arn
        ResourceRequirements:
          - Type: MEMORY
            Value: '70000'
          - Type: VCPU
            Value: '36'
        Image: !Sub $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/${PREFIX}-county-overview-${STAGE}-ecr:$IMAGE_TAG
        LogConfiguration:
          LogDriver: 'awslogs'
          Options:
            awslogs-group: !Ref CountyLogGroup
      

  ResearchComputeEnvironment:
    Type: AWS::Batch::ComputeEnvironment
    DependsOn: IAMRoleECRBatchProd
    Properties:
      Type: MANAGED
      ServiceRole: !Sub arn:aws:iam::${AWS::AccountId}:role/aws-service-role/batch.amazonaws.com/AWSServiceRoleForBatch
      ComputeEnvironmentName: !Sub ${ResourcePrefix}-${stage}-${ResourcePrefix}-research
      ComputeResources:
        MaxvCpus: 288
        SecurityGroupIds:
          - !GetAtt CountySecurityGroup.GroupId 
        Type: EC2
        Subnets:
          - !Ref SubnetID1
          - !Ref SubnetID2
          - !Ref SubnetID3
        MinvCpus: 0
        AllocationStrategy: BEST_FIT_PROGRESSIVE
        InstanceRole: !Ref InstanceProfileECRBatchProd
        InstanceTypes:
          - c5.9xlarge
      State: ENABLED